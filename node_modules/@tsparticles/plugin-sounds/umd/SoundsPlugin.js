var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@tsparticles/engine", "./Options/Classes/Sounds.js", "./utils.js"], factory);
    }
})(function (require, exports) {
    "use strict";
    var __syncRequire = typeof module === "object" && typeof module.exports === "object";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SoundsPlugin = void 0;
    const engine_1 = require("@tsparticles/engine");
    const Sounds_js_1 = require("./Options/Classes/Sounds.js");
    const utils_js_1 = require("./utils.js");
    const generalFirstClickHandler = () => {
        removeEventListener(engine_1.mouseDownEvent, generalFirstClickHandler);
        removeEventListener(engine_1.touchStartEvent, generalFirstClickHandler);
        (0, utils_js_1.unmuteWindow)();
    };
    class SoundsPlugin {
        constructor(engine) {
            this.id = "sounds";
            this._engine = engine;
            const listenerOptions = {
                capture: true,
                once: true,
            };
            addEventListener(engine_1.mouseDownEvent, generalFirstClickHandler, listenerOptions);
            addEventListener(engine_1.touchStartEvent, generalFirstClickHandler, listenerOptions);
        }
        async getPlugin(container) {
            const { SoundsInstance } = await (__syncRequire ? Promise.resolve().then(() => __importStar(require("./SoundsInstance.js"))) : new Promise((resolve_1, reject_1) => { require(["./SoundsInstance.js"], resolve_1, reject_1); }).then(__importStar));
            return new SoundsInstance(container, this._engine);
        }
        loadOptions(options, source) {
            if (!this.needsPlugin(options) && !this.needsPlugin(source)) {
                return;
            }
            let soundsOptions = options.sounds;
            if (soundsOptions?.load === undefined) {
                options.sounds = soundsOptions = new Sounds_js_1.Sounds();
            }
            soundsOptions.load(source?.sounds);
        }
        needsPlugin(options) {
            return options?.sounds?.enable ?? false;
        }
    }
    exports.SoundsPlugin = SoundsPlugin;
});
