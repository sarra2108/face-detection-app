/*! For license information please see 383.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_shape_rounded_polygon=this.webpackChunk_tsparticles_shape_rounded_polygon||[]).push([[383],{383:(t,e,a)=>{a.d(e,{RoundedPolygonDrawer:()=>r});var s=a(303);const n=2*Math.PI,o=.5;class r{draw(t){const{context:e,particle:a,radius:s}=t;!function(t,e,a){let s=e[0],n=e[1];const r=e.length;t.moveTo((s.x+n.x)*o,(s.y+n.y)*o);for(let i=1;i<=r;i++)s=n,n=e[(i+1)%r],t.arcTo(s.x,s.y,(s.x+n.x)*o,(s.y+n.y)*o,a)}(e,function(t,e,a=0){const s=n/t,o=[];for(let n=0;n<t;n++)o.push({x:Math.cos(n*s+a)*e,y:Math.sin(n*s+a)*e});return o}(a.sides,s),a.borderRadius??5)}getSidesCount(t){const e=t.shapeData;return Math.round((0,s.getRangeValue)(e?.sides??5))}particleInit(t,e){const a=e.shapeData;e.borderRadius=Math.round((0,s.getRangeValue)(a?.radius??5))*t.retina.pixelRatio}}}}]);