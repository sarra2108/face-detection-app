/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_plugin_motion"] = this["webpackChunk_tsparticles_plugin_motion"] || []).push([["dist_browser_MotionInstance_js"],{

/***/ "./dist/browser/MotionInstance.js":
/*!****************************************!*\
  !*** ./dist/browser/MotionInstance.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MotionInstance: () => (/* binding */ MotionInstance)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nconst defaultFactor = 1,\n  defaultReduce = 0,\n  identity = 1;\nclass MotionInstance {\n  constructor(container, engine) {\n    this._handleMotionChange = mediaQuery => {\n      const container = this._container,\n        motion = container.actualOptions.motion;\n      if (!motion) {\n        return;\n      }\n      if (mediaQuery.matches) {\n        if (motion.disable) {\n          container.retina.reduceFactor = defaultReduce;\n        } else {\n          container.retina.reduceFactor = motion.reduce.value ? identity / motion.reduce.factor : defaultFactor;\n        }\n      } else {\n        container.retina.reduceFactor = 1;\n      }\n    };\n    this._container = container;\n    this._engine = engine;\n  }\n  async init() {\n    const container = this._container,\n      options = container.actualOptions.motion;\n    if (!(options && (options.disable || options.reduce.value))) {\n      container.retina.reduceFactor = 1;\n      return;\n    }\n    const mediaQuery = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.safeMatchMedia)(\"(prefers-reduced-motion: reduce)\");\n    if (!mediaQuery) {\n      container.retina.reduceFactor = defaultFactor;\n      return;\n    }\n    this._handleMotionChange(mediaQuery);\n    const handleChange = () => {\n      void (async () => {\n        this._handleMotionChange(mediaQuery);\n        try {\n          await container.refresh();\n        } catch {}\n      })();\n    };\n    if (mediaQuery.addEventListener !== undefined) {\n      mediaQuery.addEventListener(\"change\", handleChange);\n    } else if (mediaQuery.addListener !== undefined) {\n      mediaQuery.addListener(handleChange);\n    }\n    await Promise.resolve();\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-motion/./dist/browser/MotionInstance.js?");

/***/ })

}]);