/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_plugin_emitters_shape_polygon"] = this["webpackChunk_tsparticles_plugin_emitters_shape_polygon"] || []).push([["dist_browser_EmittersPolygonShapeGenerator_js"],{

/***/ "./dist/browser/EmittersPolygonShape.js":
/*!**********************************************!*\
  !*** ./dist/browser/EmittersPolygonShape.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmittersPolygonShape: () => (/* binding */ EmittersPolygonShape)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_plugin_emitters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/plugin-emitters */ \"@tsparticles/plugin-emitters\");\n/* harmony import */ var _tsparticles_plugin_emitters__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_plugin_emitters__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./dist/browser/utils.js\");\n\n\n\nconst half = 0.5;\nclass EmittersPolygonShape extends _tsparticles_plugin_emitters__WEBPACK_IMPORTED_MODULE_0__.EmitterShapeBase {\n  constructor(position, size, fill, options) {\n    super(position, size, fill, options);\n    this.sides = options.sides;\n    this.angle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_1__.degToRad)(options.angle);\n    this.polygon = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.generateRandomPolygon)(position, this.sides, size.width * half, this.angle);\n  }\n  async init() {}\n  randomPosition() {\n    const fill = this.fill,\n      polygon = this.polygon,\n      res = fill ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.generateRandomPointWithinPolygon)(polygon) : (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.generateRandomPointOnPolygonPerimeter)(polygon);\n    return res ? {\n      position: res\n    } : null;\n  }\n  resize(position, size) {\n    super.resize(position, size);\n    this.polygon = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.generateRandomPolygon)(position, this.sides, size.width * half, this.angle);\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-emitters-shape-polygon/./dist/browser/EmittersPolygonShape.js?");

/***/ }),

/***/ "./dist/browser/EmittersPolygonShapeGenerator.js":
/*!*******************************************************!*\
  !*** ./dist/browser/EmittersPolygonShapeGenerator.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmittersPolygonShapeGenerator: () => (/* binding */ EmittersPolygonShapeGenerator)\n/* harmony export */ });\n/* harmony import */ var _EmittersPolygonShape_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EmittersPolygonShape.js */ \"./dist/browser/EmittersPolygonShape.js\");\n/* harmony import */ var _Options_Classes_EmittersPolygonShapeOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options/Classes/EmittersPolygonShapeOptions.js */ \"./dist/browser/Options/Classes/EmittersPolygonShapeOptions.js\");\n\n\nclass EmittersPolygonShapeGenerator {\n  generate(position, size, fill, options) {\n    const shapeOptions = new _Options_Classes_EmittersPolygonShapeOptions_js__WEBPACK_IMPORTED_MODULE_0__.EmittersPolygonShapeOptions();\n    shapeOptions.load(options);\n    return new _EmittersPolygonShape_js__WEBPACK_IMPORTED_MODULE_1__.EmittersPolygonShape(position, size, fill, shapeOptions);\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-emitters-shape-polygon/./dist/browser/EmittersPolygonShapeGenerator.js?");

/***/ }),

/***/ "./dist/browser/Options/Classes/EmittersPolygonShapeOptions.js":
/*!*********************************************************************!*\
  !*** ./dist/browser/Options/Classes/EmittersPolygonShapeOptions.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmittersPolygonShapeOptions: () => (/* binding */ EmittersPolygonShapeOptions)\n/* harmony export */ });\nclass EmittersPolygonShapeOptions {\n  constructor() {\n    this.angle = 0;\n    this.sides = 5;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.angle !== undefined) {\n      this.angle = data.angle;\n    }\n    if (data.sides !== undefined) {\n      this.sides = data.sides;\n    }\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-emitters-shape-polygon/./dist/browser/Options/Classes/EmittersPolygonShapeOptions.js?");

/***/ }),

/***/ "./dist/browser/utils.js":
/*!*******************************!*\
  !*** ./dist/browser/utils.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateRandomPointOnPolygonPerimeter: () => (/* binding */ generateRandomPointOnPolygonPerimeter),\n/* harmony export */   generateRandomPointWithinPolygon: () => (/* binding */ generateRandomPointWithinPolygon),\n/* harmony export */   generateRandomPolygon: () => (/* binding */ generateRandomPolygon),\n/* harmony export */   isPointInPolygon: () => (/* binding */ isPointInPolygon)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nconst double = 2,\n  doublePI = Math.PI * double,\n  defaultRotation = 0,\n  maxAttempts = 100;\nfunction generateRandomPolygon(position, sides, radius, rotationAngle = defaultRotation) {\n  const polygon = [],\n    angle = doublePI / sides;\n  for (let i = 0; i < sides; i++) {\n    const currentAngle = angle * i + rotationAngle;\n    polygon.push({\n      x: position.x + radius * Math.cos(currentAngle),\n      y: position.y + radius * Math.sin(currentAngle)\n    });\n  }\n  return polygon;\n}\nfunction generateRandomPointWithinPolygon(polygon) {\n  const firstIndex = 0,\n    firstPoint = polygon[firstIndex],\n    min = {\n      ...firstPoint\n    },\n    max = {\n      ...firstPoint\n    };\n  for (const point of polygon) {\n    if (point.x < min.x) {\n      min.x = point.x;\n    }\n    if (point.x > max.x) {\n      max.x = point.x;\n    }\n    if (point.y < min.y) {\n      min.y = point.y;\n    }\n    if (point.y > max.y) {\n      max.y = point.y;\n    }\n  }\n  let randomPoint = null;\n  for (let attempts = 0; attempts < maxAttempts; attempts++) {\n    const tmpPoint = {\n      x: min.x + (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * (max.x - min.x),\n      y: min.y + (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * (max.y - min.y)\n    };\n    if (isPointInPolygon(tmpPoint, polygon)) {\n      randomPoint = tmpPoint;\n      break;\n    }\n  }\n  return randomPoint;\n}\nfunction generateRandomPointOnPolygonPerimeter(polygon) {\n  const sideIndex = Math.floor((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * polygon.length),\n    startPoint = polygon[sideIndex],\n    offset = 1,\n    endPoint = polygon[(sideIndex + offset) % polygon.length],\n    t = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)();\n  return {\n    x: startPoint.x + (endPoint.x - startPoint.x) * t,\n    y: startPoint.y + (endPoint.y - startPoint.y) * t\n  };\n}\nfunction isPointInPolygon(point, polygon) {\n  let inside = false;\n  const offset = 1;\n  for (let i = 0, j = polygon.length - offset; i < polygon.length; j = i++) {\n    const pi = polygon[i],\n      pj = polygon[j];\n    const intersect = pi.y > point.y !== pj.y > point.y && point.x < (pj.x - pi.x) * (point.y - pi.y) / (pj.y - pi.y) + pi.x;\n    if (intersect) {\n      inside = !inside;\n    }\n  }\n  return inside;\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-emitters-shape-polygon/./dist/browser/utils.js?");

/***/ })

}]);