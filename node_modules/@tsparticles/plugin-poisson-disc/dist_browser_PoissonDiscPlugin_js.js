/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_plugin_poisson_disc"] = this["webpackChunk_tsparticles_plugin_poisson_disc"] || []).push([["dist_browser_PoissonDiscPlugin_js"],{

/***/ "./dist/browser/Options/Classes/Poisson.js":
/*!*************************************************!*\
  !*** ./dist/browser/Options/Classes/Poisson.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Poisson: () => (/* binding */ Poisson)\n/* harmony export */ });\nclass Poisson {\n  constructor() {\n    this.enable = false;\n    this.dimensions = 2;\n    this.radius = 0;\n    this.retries = 30;\n    this.steps = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.dimensions !== undefined) {\n      this.dimensions = data.dimensions;\n    }\n    if (data.radius !== undefined) {\n      this.radius = data.radius;\n    }\n    if (data.retries !== undefined) {\n      this.retries = data.retries;\n    }\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-poisson-disc/./dist/browser/Options/Classes/Poisson.js?");

/***/ }),

/***/ "./dist/browser/PoissonDiscPlugin.js":
/*!*******************************************!*\
  !*** ./dist/browser/PoissonDiscPlugin.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PoissonDiscPlugin: () => (/* binding */ PoissonDiscPlugin)\n/* harmony export */ });\n/* harmony import */ var _Options_Classes_Poisson_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options/Classes/Poisson.js */ \"./dist/browser/Options/Classes/Poisson.js\");\n\nclass PoissonDiscPlugin {\n  constructor(engine) {\n    this.id = \"poisson\";\n    this._engine = engine;\n  }\n  async getPlugin(container) {\n    const {\n      PoissonInstance\n    } = await __webpack_require__.e(/*! import() */ \"dist_browser_PoissonInstance_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./PoissonInstance.js */ \"./dist/browser/PoissonInstance.js\"));\n    return new PoissonInstance(container, this._engine);\n  }\n  loadOptions(options, source) {\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n    let poissonOptions = options.poisson;\n    if (poissonOptions?.load === undefined) {\n      options.poisson = poissonOptions = new _Options_Classes_Poisson_js__WEBPACK_IMPORTED_MODULE_0__.Poisson();\n    }\n    poissonOptions.load(source?.poisson);\n  }\n  needsPlugin(options) {\n    return options?.poisson?.enable ?? false;\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-poisson-disc/./dist/browser/PoissonDiscPlugin.js?");

/***/ })

}]);