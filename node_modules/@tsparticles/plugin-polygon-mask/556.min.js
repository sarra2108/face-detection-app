/*! For license information please see 556.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_plugin_polygon_mask=this.webpackChunk_tsparticles_plugin_polygon_mask||[]).push([[556],{556:(t,e,n)=>{n.d(e,{PolygonMaskInstance:()=>l});var i=n(303),s=n(972);const o=`${i.errorPrefix} No polygon data loaded.`,a=`${i.errorPrefix} No polygon found, you need to specify SVG url in config.`,r=0,h=0,c=.5;class l{constructor(t,e){this._checkInsidePolygon=t=>{const e=this._container,n=e.actualOptions.polygon;if(!n?.enable||"none"===n.type||"inline"===n.type)return!0;if(!this.raw)throw new Error(a);const s=e.canvas.size,o=t?.x??(0,i.getRandom)()*s.width,r=t?.y??(0,i.getRandom)()*s.height;let h=!1;for(let t=0,e=this.raw.length-1;t<this.raw.length;e=t++){const n=this.raw[t],i=this.raw[e];n.y>r!=i.y>r&&o<(i.x-n.x)*(r-n.y)/(i.y-n.y)+n.x&&(h=!h)}return"inside"===n.type?h:"outside"===n.type&&!h},this._createPath2D=()=>{if(this._container.actualOptions.polygon&&this.paths?.length)for(const t of this.paths){const e=t.element?.getAttribute("d");if(e){const n=new Path2D(e),i=document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGMatrix(),s=new Path2D,o=i.scale(this._scale);s.addPath?(s.addPath(n,o),t.path2d=s):delete t.path2d}else delete t.path2d;if(t.path2d??!this.raw)continue;t.path2d=new Path2D;const n=0,i=this.raw[n];t.path2d.moveTo(i.x,i.y),this.raw.forEach(((e,i)=>{i>n&&t.path2d?.lineTo(e.x,e.y)})),t.path2d.closePath()}},this._downloadSvgPath=async(t,e)=>{const n=this._container.actualOptions.polygon;if(!n)return;const s=t??n.url,o=e??!1;if(!s||void 0!==this.paths&&!o)return this.raw;const a=await fetch(s);if(!a.ok)throw new Error(`${i.errorPrefix} occurred during polygon mask download`);return await this._parseSvgPath(await a.text(),e)},this._drawPoints=()=>{if(this.raw)for(const t of this.raw)this._container.particles.addParticle({x:t.x,y:t.y})},this._getEquidistantPointByIndex=t=>{const e=this._container.actualOptions;if(!e.polygon)return;if(!this.raw?.length||!this.paths?.length)throw new Error(o);let n,i=0;const s=this.paths.reduce(((t,e)=>t+e.length),0)/e.particles.number.value;for(const e of this.paths){const o=s*t-i;if(o<=e.length){n=e.element.getPointAtLength(o);break}i+=e.length}const a=this._scale;return{x:(n?.x??r)*a+(this.offset?.x??r),y:(n?.y??h)*a+(this.offset?.y??h)}},this._getPointByIndex=t=>{if(!this.raw?.length)throw new Error(o);const e=this.raw[t%this.raw.length];return{x:e.x,y:e.y}},this._getRandomPoint=()=>{if(!this.raw?.length)throw new Error(o);const t=(0,i.itemFromArray)(this.raw);return{x:t.x,y:t.y}},this._getRandomPointByLength=()=>{if(!this._container.actualOptions.polygon)return;if(!this.raw?.length||!this.paths?.length)throw new Error(o);const t=(0,i.itemFromArray)(this.paths),e=Math.floor((0,i.getRandom)()*t.length)+1,n=t.element.getPointAtLength(e),s=this._scale;return{x:n.x*s+(this.offset?.x??r),y:n.y*s+(this.offset?.y??h)}},this._initRawData=async t=>{const e=this._container.actualOptions.polygon;if(e){if(e.url)this.raw=await this._downloadSvgPath(e.url,t);else if(e.data){const n=e.data;let s;if((0,i.isString)(n))s=n;else{const t=t=>`<path d="${t}" />`,e=(0,i.isArray)(n.path)?n.path.map(t).join(""):t(n.path);s=`<svg ${'xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"'} width="${n.size.width}" height="${n.size.height}">${e}</svg>`}this.raw=await this._parseSvgPath(s,t)}this._createPath2D(),this._engine.dispatchEvent("polygonMaskLoaded",{container:this._container})}},this._parseSvgPath=async(t,e)=>{const s=e??!1;if(void 0!==this.paths&&!s)return this.raw;const o=this._container,a=o.actualOptions.polygon;if(!a)return;const r=(new DOMParser).parseFromString(t,"image/svg+xml"),h=r.getElementsByTagName("svg")[0];let l=h.getElementsByTagName("path");l.length||(l=r.getElementsByTagName("path")),this.paths=[];for(let t=0;t<l.length;t++){const e=l.item(t);e&&this.paths.push({element:e,length:e.getTotalLength()})}const g=this._scale;this.dimension.width=parseFloat(h.getAttribute("width")??"0")*g,this.dimension.height=parseFloat(h.getAttribute("height")??"0")*g;const p=a.position??{x:50,y:50},y=o.canvas.size;this.offset={x:y.width*p.x/i.percentDenominator-this.dimension.width*c,y:y.height*p.y/i.percentDenominator-this.dimension.height*c};const{parsePaths:d}=await Promise.resolve().then(n.bind(n,972));return d(this.paths,g,this.offset)},this._polygonBounce=(t,e,n)=>{const o=this._container.actualOptions.polygon;if(!this.raw||!o?.enable||"top"!==n)return!1;if("inside"===o.type||"outside"===o.type){let e,n,o;const a=t.getPosition(),r=t.getRadius(),h=1;for(let c=0,l=this.raw.length-h;c<this.raw.length;l=c++){const h=this.raw[c],g=this.raw[l];e=(0,s.v2)(h,g,a);const p=(0,i.getDistances)(a,e);if([n,o]=[p.dx,p.dy],p.distance<r)return(0,s.I)(h,g,t.velocity),!0}if(e&&void 0!==n&&void 0!==o&&!this._checkInsidePolygon(a)){const n={x:1,y:1},i=2*r,s=-1;return a.x>=e.x&&(n.x=-1),a.y>=e.y&&(n.y=-1),t.position.x=e.x+i*n.x,t.position.y=e.y+i*n.y,t.velocity.mult(s),!0}}else if("inline"===o.type&&t.initialPosition){const e=(0,i.getDistance)(t.initialPosition,t.getPosition()),{velocity:n}=t;if(e>this._moveRadius)return n.x=n.y*c-n.x,n.y=n.x*c-n.y,!0}return!1},this._randomPoint=()=>{const t=this._container,e=t.actualOptions.polygon;if(!e)return;let n;if("inline"===e.type)switch(e.inline.arrangement){case"random-point":n=this._getRandomPoint();break;case"random-length":n=this._getRandomPointByLength();break;case"equidistant":n=this._getEquidistantPointByIndex(t.particles.count);break;default:n=this._getPointByIndex(t.particles.count)}else{const e=t.canvas.size;n={x:(0,i.getRandom)()*e.width,y:(0,i.getRandom)()*e.height}}return this._checkInsidePolygon(n)?n:this._randomPoint()},this._container=t,this._engine=e,this.dimension={height:0,width:0},this._moveRadius=0,this._scale=1}clickPositionValid(t){const e=this._container.actualOptions.polygon;return!!e?.enable&&"none"!==e.type&&"inline"!==e.type&&this._checkInsidePolygon(t)}draw(t){if(!this.paths?.length)return;const e=this._container.actualOptions.polygon;if(!e?.enable)return;const n=e.draw;if(!n.enable)return;const i=this.raw;for(const e of this.paths){const o=e.path2d;t&&(o&&this.offset?(0,s.Qz)(t,o,n.stroke,this.offset):i&&(0,s.BF)(t,i,n.stroke))}}async init(){const t=this._container,e=t.actualOptions.polygon,n=t.retina.pixelRatio;e&&(this._moveRadius=e.move.radius*n,this._scale=e.scale*n,e.enable&&await this._initRawData())}particleBounce(t,e,n){return this._polygonBounce(t,e,n)}particlePosition(t){const e=this._container.actualOptions.polygon;if(e?.enable&&(this.raw?.length??0)>0)return(0,i.deepExtend)({},t||this._randomPoint())}particlesInitialization(){const t=this._container.actualOptions.polygon;return!(!t?.enable||"inline"!==t.type||"one-per-point"!==t.inline.arrangement&&"per-point"!==t.inline.arrangement)&&(this._drawPoints(),!0)}resize(){const t=this._container,e=t.actualOptions.polygon;if(!e?.enable||"none"===e.type)return;this.redrawTimeout&&clearTimeout(this.redrawTimeout);this.redrawTimeout=window.setTimeout((()=>{(async()=>{await this._initRawData(!0),await t.particles.redraw()})()}),250)}stop(){delete this.raw,delete this.paths}}},972:(t,e,n)=>{n.d(e,{BF:()=>r,I:()=>g,Qz:()=>h,parsePaths:()=>c,v2:()=>l});var i=n(303);const s=2,o={min:0,max:1},a=2;function r(t,e,n){const s=(0,i.rangeColorToRgb)(n.color);if(!s)return;const o=e[0];t.beginPath(),t.moveTo(o.x,o.y);for(const n of e)t.lineTo(n.x,n.y);t.closePath(),t.strokeStyle=(0,i.getStyleFromRgb)(s),t.lineWidth=n.width,t.stroke()}function h(t,e,n,s){const o=1,a=0,r=0,h=1;t.setTransform(o,a,r,h,s.x,s.y);const c=(0,i.rangeColorToRgb)(n.color);c&&(t.strokeStyle=(0,i.getStyleFromRgb)(c,n.opacity),t.lineWidth=n.width,t.stroke(e),t.resetTransform())}function c(t,e,n){const i=[];for(const s of t){const t=s.element.pathSegList,o=t?.numberOfItems??0,a={x:0,y:0};for(let s=0;s<o;s++){const o=t?.getItem(s),r=window.SVGPathSeg;switch(o?.pathSegType){case r.PATHSEG_MOVETO_ABS:case r.PATHSEG_LINETO_ABS:case r.PATHSEG_CURVETO_CUBIC_ABS:case r.PATHSEG_CURVETO_QUADRATIC_ABS:case r.PATHSEG_ARC_ABS:case r.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:{const t=o;a.x=t.x,a.y=t.y;break}case r.PATHSEG_LINETO_HORIZONTAL_ABS:a.x=o.x;break;case r.PATHSEG_LINETO_VERTICAL_ABS:a.y=o.y;break;case r.PATHSEG_LINETO_REL:case r.PATHSEG_MOVETO_REL:case r.PATHSEG_CURVETO_CUBIC_REL:case r.PATHSEG_CURVETO_QUADRATIC_REL:case r.PATHSEG_ARC_REL:case r.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:{const t=o;a.x+=t.x,a.y+=t.y;break}case r.PATHSEG_LINETO_HORIZONTAL_REL:a.x+=o.x;break;case r.PATHSEG_LINETO_VERTICAL_REL:a.y+=o.y;break;case r.PATHSEG_UNKNOWN:case r.PATHSEG_CLOSEPATH:continue}i.push({x:a.x*e+n.x,y:a.y*e+n.y})}}return i}function l(t,e,n){const{dx:a,dy:r}=(0,i.getDistances)(n,t),{dx:h,dy:c}=(0,i.getDistances)(e,t),l=(a*h+r*c)/(h**s+c**s),g={x:t.x+h*l,y:t.y+c*l,isOnSegment:l>=o.min&&l<=o.max};return l<o.min?(g.x=t.x,g.y=t.y):l>o.max&&(g.x=e.x,g.y=e.y),g}function g(t,e,n){const{dx:s,dy:o}=(0,i.getDistances)(t,e),r=Math.atan2(o,s),h=i.Vector.create(Math.sin(r),-Math.cos(r)),c=a*(n.x*h.x+n.y*h.y);h.multTo(c),n.subFrom(h)}}}]);