/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_all"] = this["webpackChunk_tsparticles_all"] || []).push([["paths_zigzag_dist_browser_ZigZagPathGenerator_js"],{

/***/ "../../paths/zigzag/dist/browser/ZigZagPathGenerator.js":
/*!**************************************************************!*\
  !*** ../../paths/zigzag/dist/browser/ZigZagPathGenerator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZigZagPathGenerator: () => (/* binding */ ZigZagPathGenerator)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"../../engine/dist/browser/index.js\");\n\nconst angularFrequencyFactor = 0.5,\n  half = 0.5,\n  halfPI = Math.PI * half;\nclass ZigZagPathGenerator {\n  constructor() {\n    this.options = {\n      waveHeight: {\n        min: 0,\n        max: 3\n      },\n      waveLength: {\n        min: 0,\n        max: 5\n      }\n    };\n  }\n  generate(particle, delta) {\n    if (particle.zigzag === undefined) {\n      particle.zigzag = {\n        counter: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)(),\n        waveHeight: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(this.options.waveHeight),\n        waveLength: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(this.options.waveLength)\n      };\n    }\n    const angularFrequency = angularFrequencyFactor / particle.zigzag.waveLength * delta.factor;\n    particle.zigzag.counter += angularFrequency;\n    const zigzagAngle = particle.zigzag.waveHeight * Math.sin(particle.zigzag.counter);\n    particle.position.x += zigzagAngle * Math.cos(particle.velocity.angle + halfPI);\n    particle.position.y += zigzagAngle * Math.sin(particle.velocity.angle + halfPI);\n    return _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.Vector.origin;\n  }\n  init(container) {\n    const options = container.actualOptions.particles.move.path.options;\n    this.options.waveLength = options.waveLength ?? this.options.waveLength;\n    this.options.waveHeight = options.waveHeight ?? this.options.waveHeight;\n  }\n  reset() {}\n  update() {}\n}\n\n//# sourceURL=webpack://@tsparticles/all/../../paths/zigzag/dist/browser/ZigZagPathGenerator.js?");

/***/ })

}]);