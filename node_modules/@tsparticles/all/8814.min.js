/*! For license information please see 8814.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_all=this.webpackChunk_tsparticles_all||[]).push([[8814],{8814:(e,t,s)=>{s.d(t,{ExportVideoInstance:()=>i});var p=s(5540);const a=["webm","ogg","mp4","x-matroska"],o=["vp9","vp9.0","vp8","vp8.0","avc1","av1","h265","h.265","h264","h.264","opus","pcm","aac","mpeg","mp4a"];class i{constructor(e,t){this._supportedTypes=[],this._exportVideo=async e=>{const t=this._container.canvas.element;if(t)return new Promise((s=>{const a=t.captureStream(e.fps??this._container.actualOptions.fpsLimit),o=e.mimeType??this._supportedTypes[0],i=new MediaRecorder(a,{mimeType:o}),r=[];i.addEventListener("dataavailable",(e=>{r.push(e.data)})),i.addEventListener("stop",(()=>{s(new Blob(r,{type:o}))})),i.start(),setTimeout((()=>{i.stop()}),e.duration??5*p.Xu)}))},this._container=e,this._engine=t,this._supportedTypes=function(){const e=e=>MediaRecorder.isTypeSupported(e),t=[];return a.forEach((s=>{const p=`video/${s}`;o.forEach((s=>[`${p};codecs=${s}`,`${p};codecs=${s.toUpperCase()}`].forEach((s=>{e(s)&&t.push(s)})))),e(p)&&t.push(p)})),t}()}async export(e,t){const s={supported:!1};if("video"===e)s.supported=!0,s.blob=await this._exportVideo(t);return s}}}}]);