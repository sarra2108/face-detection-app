/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_all"] = this["webpackChunk_tsparticles_all"] || []).push([["shapes_cog_dist_browser_CogDrawer_js"],{

/***/ "../../shapes/cog/dist/browser/CogDrawer.js":
/*!**************************************************!*\
  !*** ../../shapes/cog/dist/browser/CogDrawer.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CogDrawer: () => (/* binding */ CogDrawer)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"../../engine/dist/browser/index.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils.js */ \"../../shapes/cog/dist/browser/Utils.js\");\n\n\nconst defaultHoleRadius = 44,\n  defaultInnerRadius = 72,\n  defaultInnerTaper = 35,\n  defaultNotches = 7,\n  defaultOuterTaper = 50;\nclass CogDrawer {\n  afterDraw(data) {\n    (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.drawCogHole)(data);\n  }\n  draw(data) {\n    (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.drawCog)(data);\n  }\n  particleInit(container, particle) {\n    const shapeData = particle.shapeData;\n    particle.cogHoleRadius = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.holeRadius ?? defaultHoleRadius);\n    particle.cogInnerRadius = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.innerRadius ?? defaultInnerRadius);\n    particle.cogInnerTaper = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.innerTaper ?? defaultInnerTaper);\n    particle.cogNotches = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.notches ?? defaultNotches);\n    particle.cogOuterTaper = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(shapeData?.outerTaper ?? defaultOuterTaper);\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/all/../../shapes/cog/dist/browser/CogDrawer.js?");

/***/ }),

/***/ "../../shapes/cog/dist/browser/Utils.js":
/*!**********************************************!*\
  !*** ../../shapes/cog/dist/browser/Utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawCog: () => (/* binding */ drawCog),\n/* harmony export */   drawCogHole: () => (/* binding */ drawCogHole)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"../../engine/dist/browser/index.js\");\n\nconst double = 2,\n  doublePI = Math.PI * double,\n  minAngle = 0,\n  origin = {\n    x: 0,\n    y: 0\n  },\n  taperFactor = 0.005;\nfunction drawCogHole(data) {\n  const {\n    context,\n    particle,\n    radius\n  } = data;\n  if (particle.cogHoleRadius === undefined || particle.cogInnerRadius === undefined || particle.cogInnerTaper === undefined || particle.cogNotches === undefined || particle.cogOuterTaper === undefined) {\n    return;\n  }\n  const holeRadius = radius * particle.cogHoleRadius / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator;\n  context.globalCompositeOperation = \"destination-out\";\n  context.beginPath();\n  context.moveTo(holeRadius, origin.y);\n  context.arc(origin.x, origin.y, holeRadius, minAngle, doublePI);\n  context.closePath();\n  context.fill();\n  context.globalCompositeOperation = \"source-over\";\n}\nfunction drawCog(data) {\n  const {\n    context,\n    particle,\n    radius\n  } = data;\n  if (particle.cogHoleRadius === undefined || particle.cogInnerRadius === undefined || particle.cogInnerTaper === undefined || particle.cogNotches === undefined || particle.cogOuterTaper === undefined) {\n    return;\n  }\n  const angle = doublePI / (particle.cogNotches * double),\n    taperAI = angle * particle.cogInnerTaper * taperFactor,\n    taperAO = angle * particle.cogOuterTaper * taperFactor,\n    innerRadius = radius * particle.cogInnerRadius / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator;\n  let a = angle,\n    toggle = false;\n  context.moveTo(radius * Math.cos(taperAO), radius * Math.sin(taperAO));\n  for (; a <= doublePI; a += angle) {\n    if (toggle) {\n      context.lineTo(innerRadius * Math.cos(a - taperAI), innerRadius * Math.sin(a - taperAI));\n      context.lineTo(radius * Math.cos(a + taperAO), radius * Math.sin(a + taperAO));\n    } else {\n      context.lineTo(radius * Math.cos(a - taperAO), radius * Math.sin(a - taperAO));\n      context.lineTo(innerRadius * Math.cos(a + taperAI), innerRadius * Math.sin(a + taperAI));\n    }\n    toggle = !toggle;\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/all/../../shapes/cog/dist/browser/Utils.js?");

/***/ })

}]);