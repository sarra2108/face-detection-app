/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_interaction_external_particle"] = this["webpackChunk_tsparticles_interaction_external_particle"] || []).push([["dist_browser_InteractivityParticleMaker_js"],{

/***/ "./dist/browser/InteractivityParticleMaker.js":
/*!****************************************************!*\
  !*** ./dist/browser/InteractivityParticleMaker.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractivityParticleMaker: () => (/* binding */ InteractivityParticleMaker)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Options_Classes_InteractivityParticle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Options/Classes/InteractivityParticle.js */ \"./dist/browser/Options/Classes/InteractivityParticle.js\");\n\n\nconst particleMode = \"particle\";\nclass InteractivityParticleMaker extends _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {}\n  interact() {\n    const container = this.container,\n      {\n        interactivity\n      } = container,\n      options = container.actualOptions;\n    if (!container.retina.reduceFactor) {\n      return;\n    }\n    const mousePos = interactivity.mouse.position,\n      interactivityParticleOptions = options.interactivity.modes.particle;\n    if (!interactivityParticleOptions) {\n      return;\n    }\n    const mouseStopped = interactivityParticleOptions.pauseOnStop && (interactivity.mouse.position === this._lastPosition || interactivity.mouse.position?.x === this._lastPosition?.x && interactivity.mouse.position?.y === this._lastPosition?.y),\n      clearDelay = interactivityParticleOptions.stopDelay;\n    if (mousePos) {\n      this._lastPosition = {\n        ...mousePos\n      };\n    } else {\n      delete this._lastPosition;\n    }\n    if (!this._lastPosition) {\n      return;\n    }\n    if (mouseStopped) {\n      if (this._clearTimeout) {\n        return;\n      }\n      this._clearTimeout = setTimeout(() => {\n        if (!this._particle) {\n          return;\n        }\n        if (interactivityParticleOptions.replaceCursor) {\n          const element = interactivity.element;\n          if (element) {\n            if (element instanceof Window) {\n              document.body.style.cursor = \"\";\n            } else {\n              element.style.cursor = \"\";\n            }\n          }\n        }\n        this.container.particles.remove(this._particle, undefined, true);\n        delete this._particle;\n      }, clearDelay);\n      return;\n    }\n    if (this._clearTimeout) {\n      clearTimeout(this._clearTimeout);\n      delete this._clearTimeout;\n    }\n    if (!this._particle) {\n      const particleOptions = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(interactivityParticleOptions.options, {\n        move: {\n          enable: false\n        }\n      });\n      this._particle = container.particles.addParticle(this._lastPosition, particleOptions);\n      if (interactivityParticleOptions.replaceCursor) {\n        const element = interactivity.element;\n        if (element) {\n          if (element instanceof Window) {\n            document.body.style.cursor = \"none\";\n          } else {\n            element.style.cursor = \"none\";\n          }\n        }\n      }\n    }\n    if (!this._particle) {\n      return;\n    }\n    this._particle.position.x = this._lastPosition.x;\n    this._particle.position.y = this._lastPosition.y;\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? options.interactivity).events;\n    return mouse.clicking && mouse.inside && !!mouse.position && (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isInArray)(particleMode, events.onClick.mode) || mouse.inside && !!mouse.position && (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isInArray)(particleMode, events.onHover.mode);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.particle) {\n      options.particle = new _Options_Classes_InteractivityParticle_js__WEBPACK_IMPORTED_MODULE_1__.InteractivityParticle();\n    }\n    for (const source of sources) {\n      options.particle.load(source?.particle);\n    }\n  }\n  reset() {}\n}\n\n//# sourceURL=webpack://@tsparticles/interaction-external-particle/./dist/browser/InteractivityParticleMaker.js?");

/***/ }),

/***/ "./dist/browser/Options/Classes/InteractivityParticle.js":
/*!***************************************************************!*\
  !*** ./dist/browser/Options/Classes/InteractivityParticle.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractivityParticle: () => (/* binding */ InteractivityParticle)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nclass InteractivityParticle {\n  constructor() {\n    this.replaceCursor = false;\n    this.pauseOnStop = false;\n    this.stopDelay = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.options !== undefined) {\n      this.options = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.deepExtend)({}, data.options);\n    }\n    if (data.replaceCursor !== undefined) {\n      this.replaceCursor = data.replaceCursor;\n    }\n    if (data.pauseOnStop !== undefined) {\n      this.pauseOnStop = data.pauseOnStop;\n    }\n    if (data.stopDelay !== undefined) {\n      this.stopDelay = data.stopDelay;\n    }\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/interaction-external-particle/./dist/browser/Options/Classes/InteractivityParticle.js?");

/***/ })

}]);