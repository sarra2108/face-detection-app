/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_shape_cards"] = this["webpackChunk_tsparticles_shape_cards"] || []).push([["dist_browser_SpadeDrawer_js"],{

/***/ "./dist/browser/SpadeDrawer.js":
/*!*************************************!*\
  !*** ./dist/browser/SpadeDrawer.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpadeDrawer: () => (/* binding */ SpadeDrawer)\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils.js */ \"./dist/browser/Utils.js\");\n\nclass SpadeDrawer {\n  draw(data) {\n    (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.drawPath)(data, _Utils_js__WEBPACK_IMPORTED_MODULE_0__.paths.spade);\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/shape-cards/./dist/browser/SpadeDrawer.js?");

/***/ }),

/***/ "./dist/browser/Utils.js":
/*!*******************************!*\
  !*** ./dist/browser/Utils.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawPath: () => (/* binding */ drawPath),\n/* harmony export */   paths: () => (/* binding */ paths)\n/* harmony export */ });\nfunction drawPath(data, path) {\n  if (!path.segments.length || !path.segments[0].values.length) {\n    return;\n  }\n  const {\n    context,\n    radius\n  } = data;\n  context.moveTo(path.segments[0].values[0].x * radius, path.segments[0].values[0].y * radius);\n  for (const segment of path.segments) {\n    context.bezierCurveTo(segment.values[1].x * radius, segment.values[1].y * radius, segment.values[2].x * radius, segment.values[2].y * radius, segment.values[3].x * radius, segment.values[3].y * radius);\n  }\n  for (let i = path.segments.length - 1; i >= 0; i--) {\n    const segment = path.segments[i];\n    context.bezierCurveTo(-segment.values[2].x * radius, segment.values[2].y * radius, -segment.values[1].x * radius, segment.values[1].y * radius, -segment.values[0].x * radius, segment.values[0].y * radius);\n  }\n}\nconst n = 1.0 / 2;\nconst paths = {\n  heart: {\n    segments: [{\n      values: [{\n        x: 0,\n        y: n\n      }, {\n        x: 0,\n        y: n\n      }, {\n        x: n,\n        y: 0\n      }, {\n        x: n,\n        y: -n / 2\n      }]\n    }, {\n      values: [{\n        x: n,\n        y: -n / 2\n      }, {\n        x: n,\n        y: -n / 2\n      }, {\n        x: n,\n        y: -n\n      }, {\n        x: n / 2,\n        y: -n\n      }]\n    }, {\n      values: [{\n        x: n / 2,\n        y: -n\n      }, {\n        x: n / 2,\n        y: -n\n      }, {\n        x: 0,\n        y: -n\n      }, {\n        x: 0,\n        y: -n / 2\n      }]\n    }]\n  },\n  diamond: {\n    segments: [{\n      values: [{\n        x: 0,\n        y: n\n      }, {\n        x: 0,\n        y: n\n      }, {\n        x: 3 * n / 4,\n        y: 0\n      }, {\n        x: 3 * n / 4,\n        y: 0\n      }]\n    }, {\n      values: [{\n        x: 3 * n / 4,\n        y: 0\n      }, {\n        x: 3 * n / 4,\n        y: 0\n      }, {\n        x: 0,\n        y: -n\n      }, {\n        x: 0,\n        y: -n\n      }]\n    }]\n  },\n  club: {\n    segments: [{\n      values: [{\n        x: 0,\n        y: -n\n      }, {\n        x: 0,\n        y: -n\n      }, {\n        x: n / 2,\n        y: -n\n      }, {\n        x: n / 2,\n        y: -n / 2\n      }]\n    }, {\n      values: [{\n        x: n / 2,\n        y: -n / 2\n      }, {\n        x: n / 2,\n        y: -n / 2\n      }, {\n        x: n,\n        y: -n / 2\n      }, {\n        x: n,\n        y: 0\n      }]\n    }, {\n      values: [{\n        x: n,\n        y: 0\n      }, {\n        x: n,\n        y: 0\n      }, {\n        x: n,\n        y: n / 2\n      }, {\n        x: n / 2,\n        y: n / 2\n      }]\n    }, {\n      values: [{\n        x: n / 2,\n        y: n / 2\n      }, {\n        x: n / 2,\n        y: n / 2\n      }, {\n        x: n / 8,\n        y: n / 2\n      }, {\n        x: n / 8,\n        y: n / 8\n      }]\n    }, {\n      values: [{\n        x: n / 8,\n        y: n / 8\n      }, {\n        x: n / 8,\n        y: n / 2\n      }, {\n        x: n / 2,\n        y: n\n      }, {\n        x: n / 2,\n        y: n\n      }]\n    }, {\n      values: [{\n        x: n / 2,\n        y: n\n      }, {\n        x: n / 2,\n        y: n\n      }, {\n        x: 0,\n        y: n\n      }, {\n        x: 0,\n        y: n\n      }]\n    }]\n  },\n  spade: {\n    segments: [{\n      values: [{\n        x: 0,\n        y: -n\n      }, {\n        x: 0,\n        y: -n\n      }, {\n        x: n,\n        y: -n / 2\n      }, {\n        x: n,\n        y: 0\n      }]\n    }, {\n      values: [{\n        x: n,\n        y: 0\n      }, {\n        x: n,\n        y: 0\n      }, {\n        x: n,\n        y: n / 2\n      }, {\n        x: n / 2,\n        y: n / 2\n      }]\n    }, {\n      values: [{\n        x: n / 2,\n        y: n / 2\n      }, {\n        x: n / 2,\n        y: n / 2\n      }, {\n        x: n / 8,\n        y: n / 2\n      }, {\n        x: n / 8,\n        y: n / 8\n      }]\n    }, {\n      values: [{\n        x: n / 8,\n        y: n / 8\n      }, {\n        x: n / 8,\n        y: n / 2\n      }, {\n        x: n / 2,\n        y: n\n      }, {\n        x: n / 2,\n        y: n\n      }]\n    }, {\n      values: [{\n        x: n / 2,\n        y: n\n      }, {\n        x: n / 2,\n        y: n\n      }, {\n        x: 0,\n        y: n\n      }, {\n        x: 0,\n        y: n\n      }]\n    }]\n  }\n};\n\n//# sourceURL=webpack://@tsparticles/shape-cards/./dist/browser/Utils.js?");

/***/ })

}]);