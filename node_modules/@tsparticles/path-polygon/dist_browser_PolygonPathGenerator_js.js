/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_path_polygon"] = this["webpackChunk_tsparticles_path_polygon"] || []).push([["dist_browser_PolygonPathGenerator_js"],{

/***/ "./dist/browser/PolygonPathGenerator.js":
/*!**********************************************!*\
  !*** ./dist/browser/PolygonPathGenerator.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PolygonPathGenerator: () => (/* binding */ PolygonPathGenerator)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nclass PolygonPathGenerator {\n  constructor() {\n    this._createDirs = () => {\n      this.dirsList = [];\n      for (let i = 0; i < 360; i += 360 / this.options.sides) {\n        const angle = this.options.angle + i;\n        this.dirsList.push(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.Vector.create(Math.cos(angle * Math.PI / 180), Math.sin(angle * Math.PI / 180)));\n      }\n    };\n    this.dirsList = [];\n    this.options = {\n      sides: 6,\n      turnSteps: 20,\n      angle: 30\n    };\n  }\n  generate(p) {\n    const {\n      sides\n    } = this.options;\n    if (p.hexStep === undefined) {\n      p.hexStep = 0;\n    }\n    if (p.hexDirection === undefined) {\n      p.hexDirection = sides === 6 ? ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * 3 | 0) * 2 : (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * sides | 0;\n    }\n    if (p.hexSpeed === undefined) {\n      p.hexSpeed = p.velocity.length;\n    }\n    if (p.hexStep % this.options.turnSteps === 0) {\n      p.hexDirection = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() > 0.5 ? (p.hexDirection + 1) % sides : (p.hexDirection + sides - 1) % sides;\n    }\n    p.velocity.x = 0;\n    p.velocity.y = 0;\n    p.hexStep++;\n    const direction = this.dirsList[p.hexDirection];\n    return _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.Vector.create(direction.x * p.hexSpeed, direction.y * p.hexSpeed);\n  }\n  init(container) {\n    const options = container.actualOptions.particles.move.path.options;\n    this.options.sides = options.sides > 0 ? options.sides : 6;\n    this.options.angle = options.angle ?? 30;\n    this.options.turnSteps = options.turnSteps >= 0 ? options.turnSteps : 20;\n    this._createDirs();\n  }\n  reset(particle) {\n    delete particle.hexStep;\n    delete particle.hexDirection;\n    delete particle.hexSpeed;\n  }\n  update() {}\n}\n\n//# sourceURL=webpack://@tsparticles/path-polygon/./dist/browser/PolygonPathGenerator.js?");

/***/ })

}]);