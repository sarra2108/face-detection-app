/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.3.0
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_effect_bubble"] = this["webpackChunk_tsparticles_effect_bubble"] || []).push([["dist_browser_BubbleDrawer_js"],{

/***/ "./dist/browser/BubbleDrawer.js":
/*!**************************************!*\
  !*** ./dist/browser/BubbleDrawer.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BubbleDrawer: () => (/* binding */ BubbleDrawer)\n/* harmony export */ });\nconst bubbleFactor = 3,\n  minAngle = 0,\n  double = 2,\n  maxAngle = Math.PI * double;\nclass BubbleDrawer {\n  draw(data) {\n    const {\n      context,\n      radius\n    } = data;\n    context.beginPath();\n    context.arc(radius / bubbleFactor, -radius / bubbleFactor, radius / bubbleFactor, minAngle, maxAngle, false);\n    context.closePath();\n    context.fillStyle = \"#fff9\";\n    context.fill();\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/effect-bubble/./dist/browser/BubbleDrawer.js?");

/***/ })

}]);